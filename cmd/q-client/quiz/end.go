// Code generated by go generate;
package quiz

import (
	"flag"
	"os"

	"github.com/3d0c/cli/pkg"
	"github.com/3d0c/quiz/pkg/rpc"
)

type end struct {
	*cli.General

	addr     string
	endpoint string
}

func init() {
	cli.Register("quiz.end", &end{General: &cli.General{}})
}

func (cmd *end) Register(f *flag.FlagSet) {
	cmd.General.Register(f)
	f.StringVar(&cmd.addr, "addr", "127.0.0.1:5560", "quiz server location")
}

func (cmd *end) Description() string {
	return `
Description:
	End QUIZ.
	Remove session key both from client and server.

Examples:
	; end quiz
	q-client quiz.end

	; optionally define quiz server
	q-client quiz.end -addr=192.168.0.10:5560
	`
}

func (cmd *end) Process() error {
	cmd.endpoint = "http://" + cmd.addr + "/sessions" + "/" + key()
	return nil
}

func (cmd *end) Run(f *flag.FlagSet) ([]byte, error) {
	result, err := rpc.DefaultResponseHandler(rpc.Request("DELETE", cmd.endpoint, []byte{}, nil))
	if err != nil {
		return result, err
	}

	if err = os.Remove(sessionfile); err != nil {
		return nil, err
	}

	return []byte("done\n"), nil
}
